
<%- include('../layouts/user/header.ejs') %>
		<!-- Start Hero Section -->
			<div class="borderNav">
				<div class="container">
					<div class="row justify-content-between">
						<div class="col-lg-5">
							<div class="intro-excerpt">
								
							</div>
						</div>
						<div class="col-lg-7">
							
						</div>
					</div>
				</div>
			</div>
		<!-- End Hero Section -->
  <!-- Cancel Order Modal -->
  <div class="modal fade" id="cancelOrderModal" tabindex="-1" aria-labelledby="cancelOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="cancelOrderModalLabel">Cancel Order</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <label for="cancelReason" class="form-label">Reason for Cancellation:</label>
          <select id="cancelReason" class="form-control">
            <option value="Changed mind">Changed mind</option>
            <option value="Found better price">Found a better price</option>
            <option value="Order mistake">Ordered by mistake</option>
            <option value="Other">Other</option>
          </select>
          <input type="text" id="cancelReasonOther" class="form-control mt-2" placeholder="Please specify if 'Other'" style="display:none;">
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" onclick="confirmCancelOrder()">Confirm Cancel</button>
        </div>
      </div>
    </div>
  </div>
<form action="" id="checkoutForm">
		<div class="untree_co-section">
		    <div class="container">
		      <div class="row">
		        <div class="col-md-6 mb-5 mb-md-0">
                    <input type="hidden" id="orderId" class="orderId" value="<%= order._id  %>">
		          <h2 class="h3 mb-3 text-black">Billing Details</h2>
		          <div class="p-3 p-lg-5 border bg-white">
					<div class="form-group row">
                        <h6 class="card-subtitle mb-2 text-muted"><%= order.address.fullname %></h6>
                        <h6 class="card-subtitle mb-2 text-muted"><%= order.address.mobile %></h6>
                        <h6 class="card-subtitle mb-2 text-muted"><%= order.address.street %></h6>
                        <h6 class="card-subtitle mb-2 text-muted"><%= order.address.city %></h6>
                        <h6 class="card-subtitle mb-2 text-muted"><%= order.address.state %></h6>
                        <h6 class="card-subtitle mb-2 text-muted"><%= order.address.country %></h6>
                        <h6 class="card-subtitle mb-2 text-muted"><%= order.address.pincode %></h6>  
					  </div>

		          </div>
		        </div>
		        <div class="col-md-6">
		          <div class="row mb-5">
		            <div class="col-md-12">
		              <h2 class="h3 mb-3 text-black">Your Order</h2>
		              <div class="p-3 p-lg-5 border bg-white">
		                <table class="table site-block-order-table mb-5">
		                  <thead>
		                    <th>Product</th>
		                    <th>Total</th>
		                  </thead>
		                  <tbody>
		                    <tr>
								
								<% order.products.forEach(product=>{ %>
                                    
		                      <td name="productName"><%= product.product.name  %> <strong class="mx-2">x</strong> <%= product.quantity %></td>
		                      <td><% if (product.product.bestOfferPrice < product.product.price) { %>
                                <del><i class="bi bi-currency-rupee"></i><%= product.product.price * product.quantity %></del>
                                <i class="bi bi-currency-rupee"></i><%= product.product.bestOfferPrice * product.quantity %>
                            <% } else { %>
                                <i class="bi bi-currency-rupee"></i><%= product.product.price * product.quantity %>
                            <% } %></td>
							  <input type="hidden" name="productIds" value="<%=product.product._id  %>">
							  <input type="hidden" name=" productStock" id="productStock" value="<%= product.product.stock %>">
		                    </tr>
							<% }) %>
		                    <tr>
									<td class="text-black font-weight-bold"><strong>Shipping Charge</strong></td>
									<td class="text-black" id="shippingChargeAmount"><i class="bi bi-currency-rupee"></i><span id="orderTotal"><%= order.shippingCharge %></span></strong></td>
								</tr>
								  <tr>
									<td class="text-black font-weight-bold"><strong>Order Total</strong></td>
									<td class="text-black font-weight-bold"><strong><i class="bi bi-currency-rupee"></i><span id="orderTotal"><%= order.totalAmount %></span></strong></td>
								  </tr>
								  
		                  </tbody>
		                </table>
							<div class="form-group m-5">
							  <label for="payment-method">Choose payment method:</label>
							  <select name="payment" id="payment" class="form-control">
								<option value="Razorpay">Razorpay</option>
							  </select>
							</div>
						  
							<div class="form-group m-5">
							  <button type="button" class="btn btn-black btn-lg py-3 btn-block" onclick="tryAgain('<%= order._id%>','Razorpay')">Try Again</button>
							  <button type="button" class="btn btn-black btn-lg py-3 btn-block" onclick="cancelOrder()">Cancel Order</button>
							</div>
					
		              </div>
		            </div>
		          </div>

		        </div>
		      </div>
		      <!-- </form> -->
		    </div>
		  </div>
		</form>
		<!-- Start Footer Section -->
         <script>
            const orderId= document.getElementById('orderId').value;

            document.getElementById('cancelReason').addEventListener('change', function() {
        if (this.value === 'Other') {
        document.getElementById('cancelReasonOther').style.display = 'block';
        } else {
        document.getElementById('cancelReasonOther').style.display = 'none';
        }
    });

    function cancelOrder() {
        var cancelOrderModal = new bootstrap.Modal(document.getElementById('cancelOrderModal'));
        cancelOrderModal.show();
    }

    function confirmCancelOrder() {
        const reasonSelect = document.getElementById('cancelReason');
        let cancelReason = reasonSelect.value;

        if (cancelReason === 'Other') {
        const otherReason = document.getElementById('cancelReasonOther').value.trim();
        if (otherReason) {
            cancelReason = otherReason;
        } else {
            swal("please specify your reason", {
            dangerMode: true,
            buttons: true,
            }    );
            return;
        }
        }

        fetch(`/cancelOrder`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            reason: cancelReason,
            orderId:orderId
        })
        })
        .then(response => response.json())
        .then(data => {
        if (data.success) {
            swal("Order cancelled!", "Your order cancelled successfully.", "success", {
                    button: "Go to Orders",
                    }).then((value)=>{
                        if(value){
                            window.location.href = '/orders';
                        }
                    })
        } else {
            alert('Error cancelling order: ' + data.message);
        }
        })
        .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while cancelling the order.');
        });
    };
    
    function tryAgain(orderId,paymentMethod){
        fetch(`/payAgain`,{
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            orderId:orderId
        })
    })
    .then(response => response.json())
    .then(res => {
        if (res.success) {
            if (paymentMethod === 'COD') {
                swal("Order Placed!", "Your order has been successfully placed.", "success", {
                    button: "Go to Orders",
                }).then((value) => {
                    if (value) {
                        window.location.href = '/orders';
                    }
                });
            } else if (paymentMethod === 'Razorpay') {
                const options = {
                    key: `${res.key_id}`,
                    amount: `${res.amount}`,
                    currency: "INR",
                    name: `${res.product_name}`,
                    order_id: `${res.order_id}`,
                    handler: function(response) {
						handleRazorpaySuccess(response,res.db_order_id);
                    },
                    prefill: {
                        name: `${res.name}`,
                        email: `${res.email}`,
                        contact: `${res.contact}`
                    },
                    notes: {
                        address: `${res.product_name}`
                    },
                    theme: {
                        color: '#3399cc'
                    }
                };

                const razorpayObject = new Razorpay(options);
                razorpayObject.on('payment.failed',function(response){
					handleRazorpayFailure(response.error,res.db_order_id);
				});

                razorpayObject.open();
            }
        } else {
            swal("Error placing order", res.message || "An error occurred while processing your order. Please try again later.", "error", {
                dangerMode: true,
                button: true,
            });
        }
    })
    .catch(error => {
        console.error('Error placing order:', error);
        swal("Error placing order", "An error occurred while processing your order. Please try again later.", "error", {
            dangerMode: true,
            button: true,
        });
    });
}
function handleRazorpaySuccess(response,orderId) {
    // Handle successful payment response from Razorpay
    swal("Order Placed!", "Your order has been successfully placed.", "success", {
        button: "Go to Orders",
    }).then((value) => {
        if (value) {
            window.location.href = '/orders';
        }
    });

    // Send payment success status to backend
    sendPaymentStatusToBackend(response.razorpay_payment_id, true , orderId);
}

function handleRazorpayFailure(error,orderId) {
    // Handle payment failure from Razorpay
    swal("Payment Failed", error.description || "Your payment was not successful. Please try again.", "error", {
        button: "try again",
    }).then((value)=>{
		if(value){
			window.location.href = '/orders'
		}
	})

    // Send payment failure status to backend
    sendPaymentStatusToBackend(null, false,orderId);
}

function sendPaymentStatusToBackend(paymentId, success,orderId) {
	console.log(orderId,'order id')
    fetch('/process-payment', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            paymentId: paymentId,
            success: success,
			orderId:orderId
        }),
    })
    .then(response => response.json())
    .then(data => {
        if (!data.success) {
            swal("Error", "Failed to send payment status to backend.", "error");
        }else{
			console.log('Payment status updated successfully');
		}
    })
    .catch(error => {
        console.error('Error sending payment status:', error);
        swal("Error", "An error occurred while sending payment status to backend.", "error");
    });
}
         </script>
<%- include('../layouts/user/footer.ejs') %>